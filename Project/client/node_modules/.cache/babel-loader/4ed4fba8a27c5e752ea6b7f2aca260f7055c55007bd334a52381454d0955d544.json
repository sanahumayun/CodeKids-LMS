{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IST\\\\Desktop\\\\Spring 2025\\\\SE\\\\Project\\\\SE_Project_42\\\\Project\\\\client\\\\src\\\\ChatContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// client/src/context/ChatContext.js\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContext = /*#__PURE__*/createContext();\nexport const useChatContext = () => {\n  _s();\n  return useContext(ChatContext);\n};\n_s(useChatContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ChatProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [conversations, setConversations] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [isTyping, setIsTyping] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const newSocket = io(process.env.REACT_APP_API_URL || 'http://localhost:5000');\n    setSocket(newSocket);\n    return () => {\n      newSocket.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('activeUsers', users => {\n      setActiveUsers(users);\n    });\n    socket.on('privateMessage', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n      setConversations(prevConversations => {\n        const existingConversationIndex = prevConversations.findIndex(conv => conv.userId === message.from || conv.userId === message.to);\n        if (existingConversationIndex >= 0) {\n          const updatedConversations = [...prevConversations];\n          updatedConversations[existingConversationIndex] = {\n            ...updatedConversations[existingConversationIndex],\n            lastMessage: message.content,\n            timestamp: message.timestamp\n          };\n          return updatedConversations;\n        }\n        const otherUser = message.from === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.userId) ? message.to : message.from;\n        const newConversation = {\n          userId: otherUser,\n          name: message.senderName,\n          lastMessage: message.content,\n          timestamp: message.timestamp\n        };\n        return [...prevConversations, newConversation];\n      });\n    });\n    socket.on('userTyping', ({\n      isTyping: typing,\n      from,\n      senderName\n    }) => {\n      setIsTyping(prev => ({\n        ...prev,\n        [from]: typing ? senderName : false\n      }));\n    });\n    return () => {\n      socket.off('activeUsers');\n      socket.off('privateMessage');\n      socket.off('userTyping');\n    };\n  }, [socket, currentUser]);\n  const joinChat = useCallback(user => {\n    if (!socket || !user) return;\n    setCurrentUser(user);\n    socket.emit('join', user);\n    axios.get(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/chat/conversations/${user.userId}`).then(response => {\n      setConversations(response.data.conversations);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching conversations:\", error);\n      setLoading(false);\n    });\n  }, [socket]);\n  const sendMessage = useCallback((content, to) => {\n    if (!socket || !currentUser) return;\n    const messageData = {\n      content,\n      to,\n      from: currentUser.userId,\n      senderName: currentUser.name\n    };\n    socket.emit('privateMessage', messageData);\n  }, [socket, currentUser]);\n  const sendTypingIndicator = useCallback((isTyping, to) => {\n    if (!socket || !currentUser) return;\n    socket.emit('typing', {\n      isTyping,\n      to,\n      from: currentUser.userId,\n      senderName: currentUser.name\n    });\n  }, [socket, currentUser]);\n  const loadMessages = useCallback(recipientId => {\n    if (!currentUser) return;\n    setLoading(true);\n    axios.get(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/chat/messages/${currentUser.userId}/${recipientId}`).then(response => {\n      setMessages(response.data.messages);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching messages:\", error);\n      setLoading(false);\n    });\n  }, [currentUser]);\n  const selectConversation = useCallback(conversation => {\n    setSelectedConversation(conversation);\n    loadMessages(conversation.userId);\n  }, [loadMessages]);\n  const value = {\n    socket,\n    activeUsers,\n    currentUser,\n    selectedConversation,\n    conversations,\n    messages,\n    isTyping,\n    loading,\n    joinChat,\n    sendMessage,\n    sendTypingIndicator,\n    selectConversation\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s2(ChatProvider, \"wqvaE4bYz5spf4TJwXDlVUlpAnw=\");\n_c = ChatProvider;\nvar _c;\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","io","axios","jsxDEV","_jsxDEV","ChatContext","useChatContext","_s","ChatProvider","children","_s2","socket","setSocket","activeUsers","setActiveUsers","currentUser","setCurrentUser","selectedConversation","setSelectedConversation","conversations","setConversations","messages","setMessages","isTyping","setIsTyping","loading","setLoading","newSocket","process","env","REACT_APP_API_URL","disconnect","on","users","message","prevMessages","prevConversations","existingConversationIndex","findIndex","conv","userId","from","to","updatedConversations","lastMessage","content","timestamp","otherUser","newConversation","name","senderName","typing","prev","off","joinChat","user","emit","get","then","response","data","catch","error","console","sendMessage","messageData","sendTypingIndicator","loadMessages","recipientId","selectConversation","conversation","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/IST/Desktop/Spring 2025/SE/Project/SE_Project_42/Project/client/src/ChatContext.js"],"sourcesContent":["// client/src/context/ChatContext.js\r\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\n\r\nconst ChatContext = createContext();\r\n\r\nexport const useChatContext = () => useContext(ChatContext);\r\n\r\nexport const ChatProvider = ({ children }) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [activeUsers, setActiveUsers] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [selectedConversation, setSelectedConversation] = useState(null);\r\n  const [conversations, setConversations] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [isTyping, setIsTyping] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const newSocket = io(process.env.REACT_APP_API_URL || 'http://localhost:5000');\r\n    setSocket(newSocket);\r\n\r\n    return () => {\r\n      newSocket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    socket.on('activeUsers', (users) => {\r\n      setActiveUsers(users);\r\n    });\r\n\r\n    socket.on('privateMessage', (message) => {\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n      \r\n      setConversations((prevConversations) => {\r\n        const existingConversationIndex = prevConversations.findIndex(\r\n          (conv) => conv.userId === message.from || conv.userId === message.to\r\n        );\r\n        \r\n        if (existingConversationIndex >= 0) {\r\n          const updatedConversations = [...prevConversations];\r\n          updatedConversations[existingConversationIndex] = {\r\n            ...updatedConversations[existingConversationIndex],\r\n            lastMessage: message.content,\r\n            timestamp: message.timestamp\r\n          };\r\n          return updatedConversations;\r\n        }\r\n        \r\n        const otherUser = message.from === currentUser?.userId ? message.to : message.from;\r\n        const newConversation = {\r\n          userId: otherUser,\r\n          name: message.senderName,\r\n          lastMessage: message.content,\r\n          timestamp: message.timestamp\r\n        };\r\n        \r\n        return [...prevConversations, newConversation];\r\n      });\r\n    });\r\n\r\n    socket.on('userTyping', ({ isTyping: typing, from, senderName }) => {\r\n      setIsTyping((prev) => ({ ...prev, [from]: typing ? senderName : false }));\r\n    });\r\n\r\n    return () => {\r\n      socket.off('activeUsers');\r\n      socket.off('privateMessage');\r\n      socket.off('userTyping');\r\n    };\r\n  }, [socket, currentUser]);\r\n\r\n  const joinChat = useCallback((user) => {\r\n    if (!socket || !user) return;\r\n    \r\n    setCurrentUser(user);\r\n    socket.emit('join', user);\r\n\r\n    axios.get(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/chat/conversations/${user.userId}`)\r\n      .then(response => {\r\n        setConversations(response.data.conversations);\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching conversations:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, [socket]);\r\n\r\n  const sendMessage = useCallback((content, to) => {\r\n    if (!socket || !currentUser) return;\r\n    \r\n    const messageData = {\r\n      content,\r\n      to,\r\n      from: currentUser.userId,\r\n      senderName: currentUser.name\r\n    };\r\n    \r\n    socket.emit('privateMessage', messageData);\r\n  }, [socket, currentUser]);\r\n\r\n  const sendTypingIndicator = useCallback((isTyping, to) => {\r\n    if (!socket || !currentUser) return;\r\n    \r\n    socket.emit('typing', {\r\n      isTyping,\r\n      to,\r\n      from: currentUser.userId,\r\n      senderName: currentUser.name\r\n    });\r\n  }, [socket, currentUser]);\r\n\r\n  const loadMessages = useCallback((recipientId) => {\r\n    if (!currentUser) return;\r\n    \r\n    setLoading(true);\r\n    \r\n    axios.get(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/api/chat/messages/${currentUser.userId}/${recipientId}`)\r\n      .then(response => {\r\n        setMessages(response.data.messages);\r\n        setLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching messages:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, [currentUser]);\r\n\r\n  const selectConversation = useCallback((conversation) => {\r\n    setSelectedConversation(conversation);\r\n    loadMessages(conversation.userId);\r\n  }, [loadMessages]);\r\n\r\n  const value = {\r\n    socket,\r\n    activeUsers,\r\n    currentUser,\r\n    selectedConversation,\r\n    conversations,\r\n    messages,\r\n    isTyping,\r\n    loading,\r\n    joinChat,\r\n    sendMessage,\r\n    sendTypingIndicator,\r\n    selectConversation\r\n  };\r\n\r\n  return (\r\n    <ChatContext.Provider value={value}>\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}